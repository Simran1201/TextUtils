{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","styles","setMyStyles","_useState3","_useState4","btnText","setbtnText","react_default","a","createElement","className","id","style","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","concat","mode","react_router_dom","to","title","aria-label","aria-current","htmlFor","toggleMode","height","width","cursor","Textform","text","setText","Fragment","heading","rows","value","onChange","event","target","placeholder","fontSize","disabled","length","newText","toUpperCase","showAlert","toLowerCase","arr","split","i","charAt","slice","join","find","prompt","global","RegExp","rep","replace","all","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","Alert","alert","role","word","lower","capital","msg","Contact","mail","defaultProps","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","add","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c19a8906.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport default function About(props) {\r\n  // let myStyle = {\r\n  //   color: props.mode === \"dark\" ? \"white\" : \"#454545\",\r\n  //   backgroundColor: props.mode === \"dark\" ? \"#454545\" : \"white\",\r\n  // }\r\n    const [styles , setMyStyles] = useState ({\r\n        color : \"black\",\r\n        backgroundColor : \"white\"\r\n    });\r\n    const [btnText , setbtnText] = useState (\"Enable Dark mode\");\r\n    const toggleMode = ()=> {\r\n        if(styles.color === \"white\"){\r\n            setMyStyles({\r\n                color : \"black\",\r\n                backgroundColor : \"white\"\r\n            });\r\n            setbtnText(\"Enable Dark Mode\");\r\n        }\r\n        else{\r\n            setMyStyles({\r\n                color : \"white\",\r\n                backgroundColor : \"black\"\r\n            });\r\n            setbtnText(\"Enable Light Mode\");\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"my-3 p-2\" >\r\n        <h1 className=\"my-3 mx-2 \">Light/Dark Mode</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={styles}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={styles}\r\n            >\r\n              Analyze your Text\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\" \r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={styles}>\r\n              Text utils give you a way to analyze your text quality and efficiently . Be it word count, character count.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={styles}\r\n            >\r\n              Free to use\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={styles}>\r\n              Textutli is free character counter tool that provides instant character count and word statitistic for a given text.Textutils reports the number of words and character.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={styles}\r\n            >\r\n              Browser Compatible\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={styles}>\r\n              This can work on any browser such as chrome, firefox, opera, etc. \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={toggleMode} >{btnText}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/home\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/contact\">\r\n                Contact us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n            {/* <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} /> */}\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Modes</label>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode(\"danger\")}} style={{height:\"30px\", width:\"30px\", cursor: \"pointer\"}}></div>\r\n            <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode(\"success\")}} style={{height:\"30px\", width:\"30px\", cursor: \"pointer\"}}></div>\r\n            <div className=\"bg-dark rounded mx-2 border\" onClick={()=>{props.toggleMode(\"dark\")}} style={{height:\"30px\", width:\"30px\", cursor: \"pointer\"}}></div>\r\n            <div className=\"bg-blue-100 rounded mx-2 border\" onClick={()=>{props.toggleMode(\"light\")}} style={{height:\"30px\", width:\"30px\", cursor: \"pointer\"}}></div>\r\n          </div>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title: \"Title Name\"\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"New Text\"; //Wrong way to change the state.\r\n    //setText(\"New Text\"); //Correct way to change the state.\r\n    const handleOnChange = (event)=> {\r\n        // console.log(\"The on change event\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"The button has clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=> {\r\n        // console.log(\"The button has clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case!\", \"success\");\r\n    }\r\n    const handleCpClick = ()=> {\r\n        let arr = text.split(\" \");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n        let newText = arr.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Capitialize Case!\", \"success\");\r\n    }\r\n    const handleRwClick = ()=> {\r\n        let find = prompt(\"Enter the value you want to replace: \");\r\n        let global = new RegExp(find,\"g\");\r\n        let rep = prompt(\"Enter the value you want to replace with: \");\r\n        let newText = text.replace(global,rep);\r\n        setText(newText);\r\n        props.showAlert(\"The word Has Been Replaced!\", \"success\");\r\n    }\r\n    const handleCopy = ()=> {  \r\n        let all = document.getElementById(\"myBox\");\r\n        all.select();   \r\n        navigator.clipboard.writeText(all.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n    const handleClearClick = ()=> {        \r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared!\", \"success\");\r\n    }\r\n  return (\r\n    <>\r\n        <div>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"6\" value={text} onChange={handleOnChange} placeholder=\"Enter your Text Here.....\" style={{\r\n                    backgroundColor: props.mode===\"dark\" ? \"#454545\" : \"white\",\r\n                    color: props.mode===\"dark\" ? \"white\" : \"black\",\r\n                    fontSize: \"25px\"\r\n                }}></textarea>\r\n                <button className=\"btn btn-primary my-3 mx-1 my-1\" disabled={text.length === 0} onClick={handleUpClick}>Convert to Upper Case</button>\r\n                <button className=\"btn btn-primary my-3 mx-1 my-1\" disabled={text.length === 0} onClick={handleLoClick}>Convert to Lower Case</button>\r\n                <button className=\"btn btn-primary my-3 mx-1 my-1\" disabled={text.length === 0} onClick={handleCpClick}>Convert to Capitalize Case</button>\r\n                <button className=\"btn btn-primary my-3 mx-1 my-1\" disabled={text.length === 0} onClick={handleRwClick}>Replace word</button>\r\n                <button className=\"btn btn-primary my-3 mx-1 my-1\" disabled={text.length === 0} onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary my-3 mx-1 my-1\" disabled={text.length === 0} onClick={handleClearClick}>Clear</button>\r\n            </div>\r\n        </div>  \r\n        {/* text.split(\" \").length */}\r\n        <div className=\"container my-4\">\r\n            <h2>Text Summary</h2>\r\n            <p>Total Words: { text.split(/\\s+/).filter((element)=>{ return element.length !== 0}).length } and Total Character: {text.length}</p>\r\n            <p>Time to read Words: { 0.08 * text.split(\" \").filter((element)=>{ return element.length !== 0}).length} minutes</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0 ? text : \"Enter in Textarea to Preview it here....\"}</p>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capital = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n    }\r\n  return (\r\n    <div style={{height:'30px'}}> \r\n      {props.alert &&  <div className= {`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\" >\r\n        <strong>{capital(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact(props) {\r\n  return (\r\n    <div>\r\n      <h1>Contact Us</h1>\r\n      <p>Email: {props.mail}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {  BrowserRouter as Router,  Route,  Routes } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\nimport Contact from \"./components/Contact\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //wether the dark mde is enabled or not.\n  const [alert, setAlert] = useState(null);\n  const removeBodyClass = ()=>{\n    document.body.classList.remove(\"bg-dark\")\n    document.body.classList.remove(\"bg-light\")\n    document.body.classList.remove(\"bg-danger\")\n    document.body.classList.remove(\"bg-success\")\n  }\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(()=> {\n      setAlert(null);\n    },1500);\n  }\n  const toggleMode = (cls)=>{\n    removeBodyClass();\n    document.body.classList.add(\"bg-\"+cls);\n    if(cls === \"dark\" ){\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n      showAlert(cls+\" mode has been Enabled\",\"success\");\n    }\n    else if(cls === \"light\" ){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(cls+\" mode has been Enabled\",\"success\");\n    }\n    else if(cls === \"danger\" ){\n      setMode(\"dark\");\n      document.body.style.color = \"white\";\n      showAlert(cls+\" mode has been Enabled\",\"success\");\n    }\n    else if(cls === \"success\" ){\n      setMode(\"dark\");\n      document.body.style.color = \"white\";\n      showAlert(cls+\" mode has been Enabled\",\"success\");\n    }\n    // if(mode === \"light\" ){\n    //   setMode(\"dark\");\n    //   document.body.style.backgroundColor = \"#454545\";\n    //   document.body.style.color = \"white\";\n    //   showAlert(cls+\" mode has been Enabled\",\"success\");\n    // }\n    // else{\n    //   setMode(\"light\");\n    //   document.body.style.backgroundColor = \"white\";\n    //   document.body.style.color = \"black\";\n    //   showAlert(cls+\" mode has been Enabled\",\"success\");\n    // }\n  }\n  return (\n    <>\n    <Router>\n      <Navbar title=\"Text Utils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-4\">\n        <Routes>\n            <Route path=\"home\" element={<Textform heading=\"Text Analysis\" \n              showAlert={showAlert}/>}/>              \n            <Route path=\"about\" element={<About  mode={mode}/>} />              \n            <Route path=\"/\" \n            element={<Textform heading=\"Text Analysis\" showAlert={showAlert}/>} />\n            <Route path=\"contact\" element={<Contact mail={\"abc@gmail.com\"}/>} />              \n        </Routes>\n      </div>\n    </Router>\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}